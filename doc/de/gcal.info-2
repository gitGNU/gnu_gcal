Dies ist gcal.info, hergestellt von Makeinfo Version 4.0 aus gcal.texi.

INFO-DIR-SECTION GNU Pakete
START-INFO-DIR-ENTRY
* Gcal: (gcal).                        GNU Kalenderprogramm.
* Tcal: (gcal)Aufruf von tcal.         Gcal mit morgigem Datum aufrufen.
* Txt2gcal: (gcal)Aufruf von txt2gcal. Kalendertext zu Ressourcendatei wandeln.
* Gcal2txt: (gcal)Aufruf von gcal2txt. Kalenderressource zu Textdatei wandeln.
END-INFO-DIR-ENTRY

Diese Datei beschreibt Gcal, ein Programm um Kalender zu berechnen und
auszugeben.

Copyright (c) 1994-1997, 2000 Thomas Esken

Diese Ausgabe ist für Gcal Version 3.00.

Hiermit wird die Erlaubnis erteilt, wortgetreue Kopien dieses Handbuchs
zu erstellen und zu vertreiben, sofern alle gemachten Kopien mit dem
Copyrightvermerk und diesem Genehmigungsvermerk ausgestattet sind und
vorgenannte Vermerke erhalten bleiben.

Hiermit wird die Erlaubnis erteilt, veränderte Kopien dieses Handbuchs
wie unter den Bedingungen für wortgetreue Kopien zu erstellen und zu
vertreiben, sofern die ausgeführten Arbeiten in Ableitung und Gesamtheit
innerhalb der Bestimmungen eines Genehmigungsvermerks liegen und zudem
mit diesem ausgestattet sind, welcher mit diesem hier identisch ist.

Hiermit wird die Erlaubnis erteilt, wie unter den vorgenannten
Bedingungen für veränderte Versionen Übersetzungen dieses Handbuchs in
eine andere Sprache zu erstellen und zu vertreiben, mit der Ausnahme,
daß dieser Genehmigungsvermerk in einer Übersetzung angegeben sein
darf, welche von der Free Software Foundation gebilligt wird.

Jedwede Vorschläge, Verbesserungen, Erweiterungen, Fehlerberichte, Geld-
und Sachspenden, Programmieraufträge usw. sind stets willkommen.  Bitte
senden Sie diese direkt an meine eMail Adresse <esken@gmx.net>.  Wenn
Sie dieses Werkzeug mögen, so würde ich mich sehr über eine Postkarte
von Ihnen freuen!

------------------------oOO      \\\_''/      OOo---------------------------
Thomas Esken               O     (/o-o\)     O  eMail: esken@gmx.net
Im Hagenfeld 84                 ((  ^  ))       Phone: +49 251 232585
D-48147 Muenster; Germany    \____) ~ (____/    MotD : 2old2live, 2young2die


File: gcal.info,  Node: Kalender Optionen-Footnotes,  Up: Kalender Optionen

(1) Im Englischen mit `country code' bezeichnet.

(2) ISO ist die Abkürzung für `International Organization for
Standardization'.

(3) Ähnlich dem des BSD-`cal' Programms.

(4) Diejenige Uhrzeit, die als Systemzeit in der Computeruhr gesetzt
ist.

(5) Die automatische Umwandlung in das entsprechende Julianische Datum
wird immer dann vorgenommen, wenn das aktuelle, auf dem Gregorianischen
Kalender basierte, Systemdatum vor dem Datum der Gregorianischen
Reformation liegt.

(6) Allerdings wird `GCAL_DATE_FORMAT' nur dann benutzt, wenn keine
Angabe der Option `--date-format=de|us|gb|TEXT' erfolgte.


File: gcal.info,  Node: Termin Optionen,  Prev: Kalender Optionen,  Up: Optionen

Termin Optionen
...............

`-v ARGUMENT'
`--date-variable=ARGUMENT'
     Definiere "globale" Datumvariable, welche in allen referenzierten
     Ressourcendateien sichtbar ist (*note Datumvariablen::).  Das
     ARGUMENT muß entweder eine einzelne Datumvariablen-Definition oder
     eine durch `:' Doppelpunkt verbundene Folge von Definitionen sein.

     Der Name einer Datumvariablen DVAR besteht aus einem einzelnen
     Buchstaben(1) (*note Termin Optionen-Footnote-1::).  In einer
     Definition folgt diesem Namen sodann der Zuweisungsoperator `=',
     und die Zahlenwerte für Monat MM (oder einem Monatsnamen im
     3-Buchstaben Kurzformat, z.B. `Jan', `Feb', ...) und Tag TT,
     welche diese Variable aufzunehmen hat(2) (*note Termin
     Optionen-Footnote-2::).

     Zum Beispiel:

          `--date-variable=a=1127:c=a' bzw.
          `-v a=1127:c=a'
          speichert den 27'ten November in der globalen Datumvariablen A
          und in der globalen Datumvariablen C.

`--export-date-variables'
     Bewirkt den Export lokaler Datumvariablen von Ressourcendatei zu
     Ressourcendatei.  *Note Datumvariablen::, für weitere Details.

`-r ARGUMENT'
`--text-variable=ARGUMENT'
     Definiere "globale" Textvariable, welche in allen referenzierten
     Ressourcendateien sichtbar ist (*note Textvariablen::).  Das
     ARGUMENT muß entweder eine einzelne Textvariablen-Definition oder
     eine durch `:' Doppelpunkt verbundene Folge von Definitionen sein.

     Der Name einer Textvariablen TVAR besteht aus einem `$' Präfix und
     einem einzelnen Buchstaben(3) (*note Termin Optionen-Footnote-3::).

     Eine Textvariable wird wie folgt definiert:

        * Folgt dem Namen der Textvariablen ein `=' Zuweisungsoperator,
          so wird der gesamte Text, der rechts von diesem
          Zuweisungsoperator auftritt, an diese Textvariable zugewiesen.

        * Folgt dem Namen der Textvariablen ein `?' Zuweisungsoperator,
          so wird der gesamte Text, der rechts von diesem
          Zuweisungsoperator auftritt, von Gcal als externes Kommando
          aufgefasst und ausgeführt.  Die Ausgabe, die das Kommando auf
          dem _Standardausgabe-Gerätekanal_ erzeugt hat, wird an diese
          Textvariable zugewiesen; und zwar interpretiert.  Das heißt,
          Gcal interpretiert alle in dieser Ausgabe enthaltenen
          Spezialtexte und Textvariablenreferenzen.  *Note
          Textvariablen::, und *Note Spezialtexte::, für weitere
          Informationen.

        * Folgt dem Namen der Textvariablen ein `:' Zuweisungsoperator,
          so wird der gesamte Text, der rechts von diesem
          Zuweisungsoperator auftritt, von Gcal als externes Kommando
          aufgefasst und ausgeführt.  Die Ausgabe, die das Kommando auf
          dem _Standardausgabe-Gerätekanal_ erzeugt hat, wird an diese
          Textvariable zugewiesen; und zwar uninterpretiert.  Das
          heißt, Gcal interpretiert keine in dieser Ausgabe enthaltenen
          Spezialtexte und Textvariablenreferenzen.  Siehe ebenfalls
          *Note Textvariablen::, und *Note Spezialtexte::, für weitere
          Details.

     Allerdings werden externe Kommandos von Gcal nur dann ausgeführt,
     wenn die `--execute-command' Option beim Programmaufruf angegeben
     wurde.  *Note Termin Option `--execute-command': x-execute-command,
     für weitere Informationen.

     Der Text, der rechts von einem der zulässigen Zuweisungsoperatoren
     auftritt, darf Namen von bereits definierten globalen
     Textvariablen referenzieren.  Bevor die Zuweisung vorgenommen
     wird, werden diese Referenzen dann von Gcal in ihre entsprechenden
     textlichen Ausprägungen umgesetzt.

     Eine globale Textvariable wird mit _leerem Inhalt_ definiert,
     falls kein Text rechts von einem der zulässigen
     Zuweisungsoperatoren angegeben ist.

     Zum Beispiel:

          `--text-variable=$a=foo:$c=$a' bzw.
          `-r $a=foo:$c=$a'
          speichert den Text `foo' in der globalen Textvariablen $A und
          in der globalen Textvariablen $C.

          `--text-variable=$a\:foo:$c?bar' bzw.
          `-r $a\:foo:$c?bar'
          speichert die uninterpretierte Ausgabe des Kommandos `foo' in
          der globalen Textvariablen $A, und die interpretierte Ausgabe
          des Kommandos `bar' in der globalen Textvariablen $C.

     Falls das `:' Zeichen im Text als Zeichen selbst verwendet werden
     soll, so muß dieses durch ein führendes `\' (Backslash) Zeichen
     hinsichtlich seiner speziellen Bedeutung entwertet werden, z.B.
     `\:'.  Wenn die Zeichen `\:' im Text selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\:'.

     Falls das `$' Zeichen im Text als Zeichen selbst verwendet werden
     soll, so muß dieses durch ein führendes `\' (Backslash) Zeichen
     hinsichtlich seiner speziellen Bedeutung entwertet werden, z.B.
     `\$'.  Wenn die Zeichen `\$' im Text selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\$'.

     Jedesmal wenn ein `_' (Unterstrich) Zeichen in ARGUMENT vorgefunden
     wird, so wird dieses Zeichen durch ein echtes ` ' (Leerzeichen)
     Zeichen ersetzt.

     Falls das `_' (Unterstrich) Zeichen als Zeichen selbst verwendet
     werden soll, so muß dieses durch ein führendes `\' (Backslash)
     Zeichen hinsichtlich seiner speziellen Bedeutung entwertet werden,
     z.B. `\_'.  Wenn die Zeichen `\_' selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\_'.

`--export-text-variables'
     Bewirkt den Export lokaler Textvariablen von Ressourcendatei zu
     Ressourcendatei.  *Note Textvariablen::, für weitere Details.

`--adjust-value=ARGUMENT'
     Bewirkt einerseits, daß die als ARGUMENT übergebene Zahl als
     Referenzhöhe für die Berechung der Aufgangs- und Untergangszeiten
     von den sonnen- und mondbezogenen Spezialtexten verwendet wird.
     Das Optionsargument muß einer reellen Zahl im Bereich
     -90.0...+90.0 entsprechen, die den Winkelabstand in Dezimalgrad
     vom Mittelpunkt des astronomischen Objekts zum Horizont angibt.
     Zum Beispiel kann mittels `--adjust-value=-20.5' diejenige Uhrzeit
     ermittelt werden, zu der sich der Mittelpunkt der Sonne oder des
     Mondes 20,5 Dezimalgrad unterhalb des Horizont befindet.

     Bewirkt andererseits, daß die als ARGUMENT übergebene Zahl als
     Faktor für die Berechung der Schattenlänge eines senkrechten
     Stabes von den sonnenbezogenen Spezialtexten verwendet wird.  Das
     Optionsargument muß einer reellen Zahl im Bereich 0.0...+90.0
     entsprechen, die die Schattenlänge angibt.  Zum Beispiel kann
     mittels `--adjust-value=3.5' diejenige Uhrzeit ermittelt werden,
     zu der die Länge des Stabschattens dreieinhalb mal länger ist als
     derjenige Stabschatten, der sich zum astronomischen
     Mittagzeitpunkt ergab.

     *Note Sonnendaten::, und *Note Monddaten::, für weitere
     Informationen.

`--atmosphere=LUFTDRUCK[,TEMPERATUR]'
     Die Basisdaten der Erdatmosphäre zur "Refraktionsberechnung"(4)
     (*note Termin Optionen-Footnote-4::) festlegen, die von den
     sonnen- und mondbezogenen Spezialtexten verwendet wird.  Das
     Optionsargument besteht aus einer oder zwei reellen Zahlen, die
     durch ein `,' Zeichen voneinander getrennt werden.  Die erste Zahl
     gibt den Luftdruck in Millibar an, die zweite Zahl die
     Lufttemperatur in Grad Celsius.  Die Voreinstellung für den
     Luftdruck beträgt 1013.25 Millibar, und der voreingestellte Wert
     für die Temperatur beträgt 15.0 Grad Celsius.  Beispielsweise
     werden durch `--atmosphere=1010,10' atmosphärische Bedingungen
     definiert, wie sie für einem Luftdruck von 1010 Millibar und eine
     Temperatur von 10 Grad Celsius gelten.  Wird für den Luftdruck ein
     Wert kleiner oder gleich Null eingegeben, so wird bei den sonnen-
     und mondbezogenen Spezialtexten keine atmosphärische Refraktion
     berücksichtigt, so zum Beispiel durch `--atmosphere=0'.

     *Note Sonnendaten::, und *Note Monddaten::, für weitere
     Informationen.

`--limit'
     Bewirkt bei der Berechnung von Auf- und Untergangszeiten mittels
     der sonnenbezogenen Spezialtexte für hohe Breiten, daß ein
     möglicherweise an einem Vortag oder Folgetag stattfindendes Auf-
     oder Untergangsereignis nicht als am aktuellen Tag stattfindend
     ausgegeben wird, wie es in der Grundeinstellung geschieht.  In
     hohen Breiten, also oberhalb des solaren Polarkreises, ist es
     nämlich so, daß entweder kein, oder mehr als ein Sonnenaufgang
     oder Sonnenuntergang pro Tag während bestimmter Zeiten im Jahr
     stattfindet.  Da aber ein Spezialtext grundsätzlich nur zu einer
     einzigen, atomaren Ausgabe führt, auch wenn tatsächlich eigentlich
     mehrere Ausgaben nötig wären, setzt Gcal ein solches Ereignis auf
     einen Vortag oder Folgetag.  So dargestellte Daten könnten dann in
     diesem Zusammenhang leicht fehlinterpretiert werden.

     Das folgende Beispiel soll das verdeutlichen.  Es wird die Uhrzeit
     des Endes der astronomischen Dämmerungphase für den Ort Münster,
     Deutschland, während einiger Tage im Mai 2000 berechnet, und zwar
     jeweils mit und ohne die `--limit' Option:

          $ gcal %20000506 -f/dev/null -cxl4+ \
          >      -#'0*d1#999_%s9+5158+00738,120'
          -|
          -| So,   7 Mai 2000: 23:52
          -| Mo,   8 Mai 2000: 23:57
          -| Di,   9 Mai 2000: 00:01
          -| Mi,  10 Mai 2000: 00:06
          $ gcal %20000506 -f/dev/null -cxl4+ --limit \
          >      -#'0*d1#999_%s9+5158+00738,120'
          -|
          -| So,   7 Mai 2000: 23:52
          -| Mo,   8 Mai 2000: 23:57
          -| Di,   9 Mai 2000: **:**
          -| Mi,  10 Mai 2000: **:**

     Wie man gut aus dem vorstehenden Beispiel ersehen kann,
     unterscheiden sich die Ausgaben für die Tage ab dem 9'ten Mai
     voneinander dahingehend, daß ohne die `--limit' Option eine
     offensichtlich den bürgerlichen Mitternachtzeitpunkt
     überschreitende Uhrzeit ausgegeben wird, die eigentlich nicht an
     diesen Tagen stattfinden kann, wohingegen mit der `--limit' Option
     für die Tage ab dem 9'ten Mai keine Ausgabe einer Uhrzeit erfolgt,
     da der Zeitkreis überschritten wird.  Astronomisch gesehen liegt
     der Fall vor, daß am 8'ten Mai 2000 das Ende der astronomischen
     Dämmerung um 23:57 Uhr Ortszeit stattfindet, am 9'ten Mai kein Ende
     der astronomischen Dämmerung stattfindet, da sich der
     Sonnenmittelpunkt stets oberhalb 18 Grad unterhalb eines
     geometrischen Horizonts (der Refererenzhöhe der astronomischen
     Dämmerung) befindet, jedoch am 10'ten Mai um 00:01 Uhr Ortszeit
     diese Referenzhöhe wieder durchschritten wird.  Somit gehört die
     für den 9'ten Mai ermittelte Uhrzeit eigentlich auf den 10'ten Mai
     verschoben usw., wie es durch die Ausgabe, die mit der `--limit'
     Option erzeugt wird, verdeutlicht ist.

     *Note Sonnendaten::, für weitere Informationen.

`--cycle-end=ARGUMENT'
     Die dynamischen, von der jeweiligen Uhrzeit abhängigen, sonnen- und
     mondbezogenen Spezialtexte werden für eine Folge von Uhrzeiten des
     laufenden Tages berechnet, d.h. für ein beliebiges, vom Benutzer
     individuell definierbares Zeitintervall ermittelt.  Gcal wird
     immer dann in einen solchen "Zyklusmodus" versetzt, wenn die
     `--cycle-end' Option bei Programmaufruf angegeben ist.  Das
     ARGUMENT der `--cycle-end' Option entspricht syntaktisch
     demjenigen Argument, wie es bei der `--time-offset' Option
     angegeben werden darf, also `t|@|[t|@][+|-]MMMM|HH:[MM]'.  *Note
     Kalender Option `--time-offset=ARGUMENT': x-time-offset, für die
     ausführliche Beschreibung des vorstehenden Optionsarguments.  Die
     `--cycle-end' Option dient somit zur Festlegung der Endezeit des
     Zeitintervalls, während die `--time-offset' Option *implizit* zur
     Festlegung der Startzeit des Zeitintervalls dient, die in der
     Grundeinstellung 0 Uhr beträgt(5) (*note Termin
     Optionen-Footnote-5::).

     Werden bei den beiden vorgenannten Optionen Werte für das
     Zeitintervall angegeben, die 0 Uhr unterschreiten, so werden diese
     Werte automatisch auf 0 Uhr gesetzt.  Werden Werte für das
     Zeitintervall angegeben, die 23:59 Uhr überschreiten, so werden
     diese Werte automatisch auf 23:59 Uhr gesetzt.

     Die von Gcal berücksichtigte Schrittweite zwischen der Start- und
     Endezeit des Zeitintervalls beträgt in der Grundeinstellung eine
     Minute, die aber durch die Benutzung der `--cycle-step' Option
     beliebig geändert werden kann.  *Note Termin Option
     `--cycle-step=ARGUMENT': x-cycle-step, für mehr Details.

     Sie sollten stets in Erinnerung behalten, daß die Anwendung des
     Zyklusmodus' nur dann sinnvoll ist, wenn die laufende Uhrzeit des
     Zeitintervalls auch Bestandteil derjenigen Zeile einer Gcal
     Ressourcendatei ist, die so ausgewertet werden soll.  Ansonsten
     kann bei der Ausgabe der Daten und Zeiten im Nachhinein nicht mehr
     einwandfrei festgestellt werden, welcher sonnen- oder mondbezogene
     Wert sich zu welcher Uhrzeit ergab!

     In dem nun folgenden Beispiel wird dargestellt, wie die
     topozentrische Sonnenhöhe für den Ort Münster, Deutschland,
     während zweier Tage im April 2000 berechnet wird, und zwar jeweils
     für das Zeitintervall 12:00 Uhr bis 12:05 Uhr Ortszeit:

          $ gcal %20000420 -Hno -f/dev/null -xdt -g::: \
          >      --here='0*d1#999_%ot+00+000_:_%oa+5158+00738,120' \
          >      --cycle-end=12:05 --time=12:00
          -|
          -| Do,  20 Apr 2000: +12h00': +045g58'
          -| Do,  20 Apr 2000: +12h01': +046g03'
          -| Do,  20 Apr 2000: +12h02': +046g07'
          -| Do,  20 Apr 2000: +12h03': +046g12'
          -| Do,  20 Apr 2000: +12h04': +046g17'
          -| Do,  20 Apr 2000: +12h05': +046g22'
          -| :::
          -| Fr,  21 Apr 2000: +12h00': +046g18'
          -| Fr,  21 Apr 2000: +12h01': +046g23'
          -| Fr,  21 Apr 2000: +12h02': +046g28'
          -| Fr,  21 Apr 2000: +12h03': +046g32'
          -| Fr,  21 Apr 2000: +12h04': +046g37'
          -| Fr,  21 Apr 2000: +12h05': +046g42'

     *Note Sonnendaten::, und *Note Monddaten::, für weitere
     Informationen.

`--cycle-step=ARGUMENT'
     Ändern der Schrittweite, die zwischen der Start- und Endezeit des
     Zeitintervalls benutzt wird, in dem die dynamischen, von der
     jeweiligen Uhrzeit abhängigen sonnen- und mondbezogenen
     Spezialtexte berechnet werden.  *Note Termin Option
     `--cycle-end=ARGUMENT': x-cycle-end, wie ein solches Zeitintervall
     definiert wird.  Ohne die Angabe der `--cycle-end' Option wird
     eine gegebene `--cycle-step' Option vollständig ignoriert.  Diese
     löst auch nicht den Zyklusmodus bei Gcal aus!  Das ARGUMENT der
     `--cycle-step' Option entspricht in etwa demjenigen Argument, wie
     es bei der `--time-offset' Option angegeben werden darf, nur daß
     relative Bezüge zur aktuellen Ortszeit bzw. Weltzeit nicht gemacht
     werden können.  Gcal benutzt stets den Betrag der angegebenen
     Schrittweite.  Somit lautet die Schablone für das Argument, das
     bei der `--cycle-step' Option angegeben werden darf
     `[+|-]MMMM|HH:[MM]'.  *Note Kalender Option
     `--time-offset=ARGUMENT': x-time-offset, für die ausführliche
     Beschreibung des vorstehenden Optionsarguments.

     In der Grundeinstellung beträgt die Schrittweite im Zeitintervall
     eine Minute.

     In dem nun folgenden Beispiel wird dargestellt, wie die
     topozentrische Sonnenhöhe für den Ort Münster, Deutschland,
     während zweier Tage im April 2000 berechnet wird, und zwar jeweils
     für das Zeitintervall 10:00 Uhr bis 17:00 Uhr Ortszeit, mit einem
     Schrittweitenwert von einer Stunde und 15 Minuten:

          $ gcal %20000420 -Hno -f/dev/null -xdt -g::: \
          >      --here='0*d1#999_%ot+00+000_:_%o*a+5158+00738,120' \
          >      --cycle-end=10:00 --time=17:00 --cycle-step=1:15
          -|
          -| Do,  20 Apr 2000: +10h45': +38.038
          -| Do,  20 Apr 2000: +12h00': +45.962
          -| Do,  20 Apr 2000: +13h15': +49.665
          -| Do,  20 Apr 2000: +14h30': +47.882
          -| Do,  20 Apr 2000: +15h45': +41.267
          -| Do,  20 Apr 2000: +17h00': +31.633
          -| :::
          -| Fr,  21 Apr 2000: +10h45': +38.355
          -| Fr,  21 Apr 2000: +12h00': +46.299
          -| Fr,  21 Apr 2000: +13h15': +50.006
          -| Fr,  21 Apr 2000: +14h30': +48.198
          -| Fr,  21 Apr 2000: +15h45': +41.545
          -| Fr,  21 Apr 2000: +17h00': +31.881

     *Note Sonnendaten::, und *Note Monddaten::, für weitere
     Informationen.

`--precise'
     Die von den sonnen- und mondbezogenen Spezialtexten erzeugten
     astronomischen Daten und Zeiten, beziehungsweise die vom distanz-
     und kurswinkelbezogenen Spezialtext erzeugten geographischen
     Daten, werden mit einer höheren Präzision dargestellt, d.h. je
     nach Darstellungsmodus- oder stil und Art des Spezialtextes, mit
     einer höheren Anzahl an Nachkommastellen bei Dezimalwerten, oder
     der Ausgabe des Zeitsekundenanteils oder des
     Altgrad-Sekundenanteils.

     *Note Sonnendaten::, und *Note Monddaten::, sowie *Note
     Geographische Distanz und Kurswinkel::, für weitere Informationen.

`--execute-command'
     Bewirkt einerseits, daß shell Kommando `%![ARGUMENT]' Spezialtexte
     ausgeführt werden, und nicht rein textlich ausgeben werden.  *Note
     Shell Kommando `%!'[ARGUMENT] Spezialtext: Shell Kommando, für
     weitere Details.  Und bewirkt andererseits, daß `TVAR?[KOMMANDO]'
     und `TVAR:[KOMMANDO]' Textvariablendefinitionen die Ausgabe eines
     externen Kommandos zugewiesen wird, und nicht der Text, der den
     Aufruf des externen Kommandos enthält.  *Note Textvariablen::, für
     weitere Informationen.

`-D ARGUMENT'
`--filter-day=ARGUMENT'
     Gibt nur diejenigen Termine aus, welche nicht durch das angegebene
     ARGUMENT ausgeschlossen werden.  *Note Datumteil einer Zeile::,
     sowie ebenfalls *Note Ausschließen ohne Argument `%?'
     Spezialtexte: Ausschliessen ohne Argument.  Das ARGUMENT besteht
     aus einem oder mehreren Zeichen, wie sie im Ausschließen ohne
     Argument `%?' Spezialtext verwandt werden; allerdings ohne das
     jeweils anführende `%' Zeichen.

     So kann zum Beispiel Gcal dazu veranlaßt werden, eine
     Jahresübersicht nur derjenigen Termine aus der Datei `demo.rc'
     auszugeben, die auf gesetzliche Feiertage fallen, und zudem
     Samstage oder Sonntage sind:

          gcal -f demo.rc --year --filter-day=Rv

`-P ARGUMENT'
`--filter-period=ARGUMENT'
     Gibt nur diejenigen Termine aus, welche nicht durch das angegebene
     ARGUMENT ausgeschlossen werden.  *Note Datumteil einer Zeile::,
     sowie ebenfalls *Note Ausschließen mit Datumargument `%?[DATUM]'
     Spezialtexte: Ausschliessen mit Datumargument.  Das ARGUMENT
     besteht aus einem oder mehreren Ausdrücken, wie sie im
     Ausschließen mit Datumargument `%?[DATUM]' Spezialtext verwandt
     werden; allerdings ohne das jeweils anführende `%' Zeichen.  Es
     können mehrere dieser `%?[DATUM]' Ausdrücke angegeben werden, wenn
     diese durch ein `,' Zeichen verbunden werden.

     So kann zum Beispiel Gcal dazu veranlaßt werden, eine
     Jahresübersicht nur derjenigen Termine aus der Datei `demo.rc'
     auszugeben, die in den Zeitraum vom 17'ten bis zum 20'ten jeden
     Monats fallen, und die auf den 31'ten jeden Monats fallen:

          gcal -f demo.rc -y -P i00000017#00000020,i00000031#00000031

`-I SUCHMUSTER'
`--filter-text=SUCHMUSTER'
     Gibt nur diejenigen Termine aus, deren vollständig expandierter
     Termintext(6) (*note Termin Optionen-Footnote-6::) mit dem
     angegebenen SUCHMUSTER übereinstimmt.  *Note Textteil einer
     Zeile::, sowie ebenfalls *Note `%?'... Spezialtexte zum
     Textersatz: Ersetzen.  Das SUCHMUSTER ist ein _regulärer
     Ausdruck_(7) (*note Termin Optionen-Footnote-7::), wie es vom Unix
     `ed' Zeileneditor erkannt wird.  *Note Reguläre Ausdrücke:
     Regulaere Ausdruecke, für weitere Informationen.

     So kann zum Beispiel Gcal dazu veranlaßt werden, alle Zahnarzt- und
     Augenarzttermine aus der Datei `doctor.rc' auszugeben, die im
     laufenden Monat anfallen:

          gcal -f doctor.rc --month -I "[zZ]ahnarzt|[aA]ugenarzt"

     Jedesmal wenn ein `_' (Unterstrich) Zeichen im SUCHMUSTER Argument
     vorgefunden wird, so wird dieses Zeichen durch ein echtes ` '
     (Leerzeichen) Zeichen ersetzt.

     Falls das `_' (Unterstrich) Zeichen als Zeichen selbst verwendet
     werden soll, so muß dieses durch ein führendes `\' (Backslash)
     Zeichen hinsichtlich seiner speziellen Bedeutung entwertet werden,
     z.B. `\_'.  Wenn die Zeichen `\_' selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\_'.

`--ignore-case'
     Bewirkt das sowohl im SUCHMUSTER der `--filter-text=SUCHMUSTER'
     Option als auch im vollständig expandierten Termintext nicht
     zwischen Groß- und Kleinschreibung unterschieden wird.  *Note
     Termin Option `--filter-text=SUCHMUSTER': x-filter-text.

`--revert-match'
     Bewirkt die Ausgabe aller derjenigen Termine, deren vollständig
     expandierter Termintext nicht mit dem SUCHMUSTER der
     `--filter-text=SUCHMUSTER' Option übereinstimmt.
     *Note Termin Option `--filter-text=SUCHMUSTER': x-filter-text.

`-c|C[-]'
`--today'
`--list-of-fixed-dates[=short|long]'
`--descending-fixed-dates[=short|long]'
     Aktivierung der Terminfunktion und Ausgabe von Terminen.

    `-c'
    `--today'
    `--list-of-fixed-dates=short'
          Aktivierung der Terminfunktion (implizite Benutzung der
          Standard-Ressourcendatei) und alle Daten in aufsteigender
          Reihenfolge ausgeben, die sich auf das aktuelle Systemdatum
          (==heute) beziehen.  Wenn keine Daten zum heutigen Tag
          vorgefunden werden, so werden keine Termine ausgegeben und
          das Programm wird mit Fehlerkode abgebrochen.  *Note
          Fehlerkode 1: x-1-Fehlerkode.

    `-c-'
    `--descending-fixed-dates=short'
          Aktivierung der Terminfunktion (implizite Benutzung der
          Standard-Ressourcendatei) und alle Daten in absteigender
          Reihenfolge ausgeben, die sich auf das aktuelle Systemdatum
          (==heute) beziehen.  Wenn keine Daten zum heutigen Tag
          vorgefunden werden, so werden keine Termine ausgegeben und
          das Programm wird mit Fehlerkode abgebrochen.  *Note
          Fehlerkode 1: x-1-Fehlerkode.

    `-C'
    `--list-of-fixed-dates=long'
          Aktivierung der Terminfunktion (implizite Benutzung der
          Standard-Ressourcendatei) und alle Daten in aufsteigender
          Reihenfolge ausgeben, die sich auf das aktuelle Systemdatum
          (==heute) beziehen.  Wenn keine Daten zum heutigen Tag
          vorgefunden werden, so wird ein "leerer" Termin ausgegeben,
          der nur aus dem Datum besteht.

    `-C-'
    `--descending-fixed-dates=long'
          Aktivierung der Terminfunktion (implizite Benutzung der
          Standard-Ressourcendatei) und alle Daten in absteigender
          Reihenfolge ausgeben, die sich auf das aktuelle Systemdatum
          (==heute) beziehen.  Wenn keine Daten zum heutigen Tag
          vorgefunden werden, so wird ein "leerer' Termin ausgegeben,
          der nur aus dem Datum besteht.

`-f|F DATEINAME[+...]'
`--resource-file=DATEINAME[+...]'
     Aktivierung der Terminfunktion und DATEINAME anstelle der
     Standard-Ressourcendatei benutzen.  Sodann alle Daten in
     aufsteigender Reihenfolge ausgeben, die in den Terminzeitraum
     fallen.  Wurde kein besonderer Terminzeitraum angegeben, so wird
     das aktuelle Systemdatum (==heute) als Terminzeitraum angenommen.
     Wurde der Optionsbuchstabe `f' bei der Kurzoption benutzt und es
     werden keinerlei Daten in DATEINAME vorgefunden, die in den
     Terminzeitraum fallen, so werden keine Termine ausgegeben und das
     Programm wird mit Fehlerkode abgebrochen.  *Note Fehlerkode 1:
     x-1-Fehlerkode.  Wurde der Optionsbuchstabe `F' bei der Kurzoption
     benutzt und es werden keinerlei Daten in DATEINAME vorgefunden,
     die in den Terminzeitraum fallen, so wird ein "leerer" Termin
     ausgegeben, der nur aus dem Datum besteht.

     Es kann mehr als eine Ressourcendatei DATEINAME verwendet werden,
     wenn die zusätzlichen Ressourcendateien, durch ein `+' Zeichen
     verbunden, aufgeführt werden, z.B.:

          `--resource-file=./foo+xyz+/data/bar+$HOME/.gcalrc' bzw.
          `-f ./foo+xyz+/data/bar+$HOME/.gcalrc'

     berücksichtigt alle Dateien, die in dem vorstehenden Argument
     aufgeführt sind; dabei wird ein spezieller Suchmechanismus zum
     Auffinden der Dateien benutzt.  *Note Datei-Suchmechanismus:
     x-Datei-Suchmechanismus, für weitere Details.  Wenn DATEINAME auf
     `/dev/null' gesetzt ist, so wird daß Vorladen einer
     Standard-Ressourcendatei verhindert, was nützlich ist, wenn _leere
     Terminlisten_ erzeugt werden sollen.  Wird nur ein einzelnes `-'
     Zeichen als DATEINAME angegeben, wie zum Beispiel
     `--resource-file=./foo+-+xyz' oder `-F-', aber nicht `-F -', so
     liest und verarbeitet Gcal alle Eingaben, die vom
     _Standardeingabe-Gerätekanal_ kommen.

     Falls das `+' Zeichen als Zeichen selbst verwendet werden soll, so
     muß dieses durch ein führendes `\' (Backslash) Zeichen
     hinsichtlich seiner speziellen Bedeutung entwertet werden, z.B.
     `\+'.  Wenn die Zeichen `\+' selbst als Zeichenfolge verwendet
     werden sollen, so muß das `\' (Backslash) Zeichen durch ein
     weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\+'.

     Jedesmal wenn ein `_' (Unterstrich) Zeichen in DATEINAME
     vorgefunden wird, so wird dieses Zeichen durch ein echtes ` '
     (Leerzeichen) Zeichen ersetzt.

     Falls das `_' (Unterstrich) Zeichen als Zeichen selbst verwendet
     werden soll, so muß dieses durch ein führendes `\' (Backslash)
     Zeichen hinsichtlich seiner speziellen Bedeutung entwertet werden,
     z.B. `\_'.  Wenn die Zeichen `\_' selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\_'.

`-# ZEILE'
`--here=ZEILE'
     Aktivierung der Terminfunktion und das ZEILE Argument zusammen mit
     der Standard-Ressourcendatei bzw. den zusätzlichen
     Ressourcendateien benutzen.  Das ZEILE Argument muß einer
     zulässigen Zeile entsprechen, wie sie in einer Gcal
     Ressourcendatei auftreten darf (*note Struktur einer
     Ressourcendatei::), und wird stets zuletzt *nach* der Verarbeitung
     aller Ressourcendateien ausgewertet, so daß Bezüge auf
     exportierte, lokale Datum- oder Textvariablen vorgenommen werden
     können.  Diese Option darf mehrfach angegeben werden, und wird in
     genau der vorgefundenen Reihenfolge abgearbeitet.  Es werden alle
     Daten in aufsteigender Reihenfolge ausgegeben, die in den
     Terminzeitraum fallen.  Wurde kein besonderer Terminzeitraum
     angegeben, so wird das aktuelle Systemdatum (==heute) als
     Terminzeitraum angenommen.  Werden keinerlei Daten in der ZEILE
     vorgefunden, die in den Terminzeitraum fallen, so werden keine
     Termine ausgegeben und das Programm wird mit Fehlerkode
     abgebrochen.  *Note Fehlerkode 1: x-1-Fehlerkode.

     So bewirkt zum Beispiel der Aufruf:

          gcal -# "0*d1so#99so.7 ^%Z" --here="#include <foo>" -y

     die implizite Verarbeitung der Standard-Ressourcendatei, bevor die
     weitere Ressourcendateizeile `0*d1so#99so.7 ^%Z' und danach
     `#include <foo>' verarbeitet werden, und zwar so, als wären diese
     Texte ein physischer Bestandteil der Standard-Ressourcendatei.

     Jedesmal wenn ein `_' (Unterstrich) Zeichen in ZEILE vorgefunden
     wird, so wird dieses Zeichen durch ein echtes ` ' (Leerzeichen)
     Zeichen ersetzt.

     Falls das `_' (Unterstrich) Zeichen als Zeichen selbst verwendet
     werden soll, so muß dieses durch ein führendes `\' (Backslash)
     Zeichen hinsichtlich seiner speziellen Bedeutung entwertet werden,
     z.B. `\_'.  Wenn die Zeichen `\_' selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\_'.

*Bitte beachten:*
Wenn die Kurzoption `-c' und/oder ihre Modifizierer `t|[w|m|y[+|-]'
bzw. die Kurzoption `-f' in *Großbuchstaben* angegeben werden, z.B.:

     -C
     -F foo.bar
     -CeT
     -c-aW+
     -CeaxY-
     -c-M

so gibt Gcal für *jeden* Tag der verlangten Periode Termine aus.

Die Modifizierer einer kombinierten/komplexen/gepackten Kurzoption zur
Ausgabe von Terminen müssen entsprechend der hier vorgegebenen
Stufungsreihenfolge zusammengesetzt werden, da Gcal diese als
positionale Parameter behandelt:

    Erste Stufe: _Repräsentation-des-Textes_
          `a', `A', `e|E', `J', `k', `o', `Q', `U', `x', `z', `Z'

    Zweite Stufe: _Setzung-der-zu-berücksichtigenden-Periode_
          `d', `l', `t|T', `w|W|m|M|y|Y[+|-]', `N+|-', `Nd', `Nw',
          `*dN[WWW]', `*wN[WWW]', `@e|t|DVAR[[+|-]N]',
          `@e|t|DVAR[+|-]NWWW', `MMTT', `MMWWWN'

Wenn mit den vorstehenden Modifizierern gearbeitet werden soll, so
*müssen* diese entweder durch eine explizite `-c|C[-]' Kurzoption
angeführt werden, z.B.:

     -c-t
     -cw-
     -CZdekloQUzJaxA12+

und es darf nur *ein* zeitraumdefinierender Terminzeitraum-Modifizierer
angegeben werden(8) (*note Termin Optionen-Footnote-8::).

Oder die Modifizierer müssen als Einzelzeichenoption, oder
zusammengefaßt zu einem einzelnen Kommandozeilenwort, angegeben werden,
und es muß zudem entweder die Kurzoption `-c|C[-]',
`-f|F DATEINAME[+...]' oder `-# ZEILE'(9) (*note Termin
Optionen-Footnote-9::) beim Aufruf von Gcal angegeben werden, z.B.:

     -c- -t
     -w- -c
     -a -Ad -e -kloQUxz -C12+
     -F foo.bar -dJZA -l*d10
     --here="; Kommentar" -dZAa

Werden die Modifizierer als Einzelzeichenoption oder zu einem einzelnen
Kommandozeilenwort zusammengefaßt angegeben, und dabei einer der
`t|T|[w|W|m|M|y|Y[+|-]]' Modifizierer benutzt(10) (*note Termin
Optionen-Footnote-10::), so ist die Angabe einer `-c|C[-]' bzw.
`-f|F DATEINAME[+...]' Kurzoption(11) (*note Termin
Optionen-Footnote-11::) nicht notwendig, um die Terminfunktion von Gcal
zu aktivieren, da die Terminfunktion durch diese Modifizierer bzw.
Aliasnamen implizit ausgelöst wird.

*Note Kodierschema::, wo Tabellen aufgeführt sind, aus denen ersehen
werden kann, welche _Terminargumente_ mit welchem _Datumteil_ einer
Zeile der Ressourcendatei korrespondieren, d.h. bei Anwahl eines
_Terminarguments_ berücksichtigt werden; da Gcal eben nicht alle
vorhandenen Einträge in einer Ressourcendatei berücksichtigt, sondern
nur solche, die in einem bestimmten Verhältnis zum _Terminargument_
stehen, und somit die Ausgabe überflüssiger Informationen verhindert
wird.

*Termintext-Modifizierer und Optionen:*

`--biorhythm-axis=ANZAHL'
     Die Breite der Biorhythmus-Textgrafik --die durch einen
     Biorhythmus-Textgrafik `%;[DATUM]' Spezialtext erzeugt werden
     kann-- wird auf die im ANZAHL Argument angegebene Zahl von Zeichen
     für jede Achse des Balkens geändert.  Das ANZAHL Argument muß eine
     Ganzzahl zwischen 1...100 sein, die interne Grundeinstellung
     beträgt 20 Zeichen.  Wenn das Divisionsergebnis von 100 durch
     ANZAHL einen Divisionsrest ergibt, so wird ANZAHL intern auf die
     nächstkleinere Zahl reduziert, welche die Zahl 100 ohne
     Divisionsrest teilt.  Das bedeutet, daß nur die Zahlen 1, 2, 4, 5,
     10, 20, 25, 50 und 100 tatsächlich berücksichtigt werden, so daß
     ein ANZAHL Argument von 19 intern auf 10 reduziert wird.

     Zum Beispiel:

          $ cat bio.rc
          -| 0*d1#999 %;19620921
          $ gcal -fbio.rc %19961212 -s0 -xw --biorhythm-axis=19
          -|
          -| Do, <12>Dez 1996: 0- G       P1 E        +0
          -| Fr,  13 Dez 1996: 0-  G   P   1          +0
          -| Sa,  14 Dez 1996: 0-    @   E 0          +0
          -| So,  15 Dez 1996: 0-  P  GE   0          +0
          -| Mo,  16 Dez 1996: 0- P  E  G  0          +0
          -| Di,  17 Dez 1996: 1-P  E     G0          +0
          -| Mi,  18 Dez 1996: 0- @        1          +0

     *Note Biorhythmus `%?[DATUM]' Spezialtexte: Biorhythmus, für
     weitere Details.

`--moonimage-lines=ANZAHL'
     Die Höhe der Mondphasen-Textgrafik --die durch einen
     Mondphasen-Textgrafik `%Z[DATUM]' Spezialtext erzeugt werden
     kann-- wird auf die im ANZAHL Argument angegebene Zahl von Zeilen
     geändert.  Das ANZAHL Argument muß eine Ganzzahl zwischen 6...30
     sein, die interne Grundeinstellung beträgt 12 Zeilen.

     Zum Beispiel:

          $ gcal -f/dev/null -#0*d1#999_%Z__%O %19950407 -x --moon=8
          -|
          -| Fr, < 7>Apr 1995:          (    @@@@@
          -|                       (           @@@@@@@@
          -|                    (              @@@@@@@@@@@
          -|                   (               @@@@@@@@@@@@
          -|                   (               @@@@@@@@@@@@
          -|                    (              @@@@@@@@@@@
          -|                     (             @@@@@@@@@@
          -|                         (        @@@@@@@ 42%+

     *Note Mondphase `%[FORMAT]?[DATUM]' Spezialtexte: Mondphase, für
     weitere Details.

`a'
`--include-resource-file-name'
     Den Termintext mit dem Namen der verwendeten Ressourcendatei und
     der Zeilennummer des Termins ausstatten, z.B.:

          Mo,   1 Jan 1995: (`Ewige Feiertagsliste'#00003) Neujahr
          Mo,   1 Jan 1995: (.gcalrc#00987) Keine weiteren Termine
          ...

`A'
`--alternative-format'
     Anstelle der Ausgabe im "Standard" Listenformat, z.B.:

          Mo,   1 Jan 1995: Neujahr
          Mo,   1 Jan 1995: Keine weiteren Termine
          ...

     benutzt Gcal das "Alternative" Listenformat, z.B.:

          Mo,   1 Jan 1995:
          Neujahr
          Keine weiteren Termine
          ...

`e'
`--include-holidays=long'
     Alle Daten aus der ewigen Feiertagsliste in die Terminliste
     einstreuen, d.h. gesetzliche Feiertage und Gedenktage.

`E'
`--include-holidays=short'
     Nur diejenigen Daten aus der ewigen Feiertagsliste in die
     Terminliste einstreuen, die gesetzliche Feiertage sind.

`g[TEXT]'
`--grouping-text[=TEXT]'
     Die Termine tageweise mittels des Separators TEXT gruppieren.
     Wenn kein TEXT angegeben ist, so wird der eingebaute TEXT(12)
     (*note Termin Optionen-Footnote-12::) zum Gruppieren verwendet,
     z.B.:

          $ gcal -Cw -cg
          -|
          -| So,   6 Nov 1994: Text 1
          -| So,   6 Nov 1994: Text 2
          -|
          -| Mo,   7 Nov 1994: Text 3
          -|
          -| Di,   8 Nov 1994: Text 4
          ...
          
          
          $ gcal -Cw -g'-Ein_vom\_Benutzer-~-definierter Text-'
          -|
          -| So,   6 Nov 1994: Text 1
          -| So,   6 Nov 1994: Text 2
          -| -Ein vom_Benutzer-
          -| -definierter Text-
          -| Mo,   7 Nov 1994: Text 3
          -| -Ein vom_Benutzer-
          -| -definierter Text-
          -| Di,   8 Nov 1994: Text 4
          ...

     Jedesmal wenn ein `~' (Tilde) Zeichen in TEXT vorgefunden wird, so
     wird dieses Zeichen durch ein echtes `\n' (Newline) Zeichen
     ersetzt.

     Falls das `~' (Tilde) Zeichen als Zeichen selbst verwendet werden
     soll, so muß dieses durch ein führendes `\' (Backslash) Zeichen
     hinsichtlich seiner speziellen Bedeutung entwertet werden, z.B.
     `\~'.  Wenn die Zeichen `\~' selbst als Zeichenfolge verwendet
     werden sollen, so muß das `\' (Backslash) Zeichen durch ein
     weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\~'.

     Jedesmal wenn ein `_' (Unterstrich) Zeichen in TEXT vorgefunden
     wird, so wird dieses Zeichen durch ein echtes ` ' (Leerzeichen)
     Zeichen ersetzt.

     Falls das `_' (Unterstrich) Zeichen als Zeichen selbst verwendet
     werden soll, so muß dieses durch ein führendes `\' (Backslash)
     Zeichen hinsichtlich seiner speziellen Bedeutung entwertet werden,
     z.B. `\_'.  Wenn die Zeichen `\_' selbst als Zeichenfolge
     verwendet werden sollen, so muß das `\' (Backslash) Zeichen durch
     ein weiteres `\' (Backslash) Zeichen geschützt werden, z.B. `\\_'.

`k'
`--include-week-number'
     Das eine jede Einzelzeile anführende Datum in einer Terminliste
     wird entweder mit einer ISO-Wochennummer oder Standard-Wochennummer
     versehen.  *Note Kalender Option `--starting-day=ARGUMENT':
     x-starting-day, *Note Kalender Option `--iso-week-number=yes|no':
     x-iso-week-number, und *Note Gesichtspunkte zur
     Internationalisierung: Internationalisierung, für weitere Details.

`o'
`--omit-multiple-date-part'
     Vermeidet die Mehrfachausgabe von einem jede Einzelzeile
     anführendem Datum in der Terminliste, falls sich weitere Termine
     auf dieses Datum beziehen(13) (*note Termin
     Optionen-Footnote-13::), z.B.:

          $ gcal -co
          -|
          -| So,   6 Nov 1994: Text 1
          -|                   Text 2
          ...

`Q'
`--suppress-fixed-dates-list-separator'
     Die Ausgabe der Leerzeile, welche eine Terminliste stets anführt,
     unterdrücken.  Um Gcal zum Beispiel zu veranlassen, nur die Anzahl
     der Tage vom 1'ten Januar 1970 bis zum 1'ten Januar 1980 als
     alleinige Ausgabe zu erzeugen, kann das Programm wie folgt
     aufgerufen werden:

          $ gcal -f /dev/null -QUx %19800101 -#0_%j-2440588
          -| 3652

`U'
`--suppress-date-part'
     Unterdrückt die Ausgabe von einem jede Einzelzeile anführendem
     Datum in der Terminliste, z.B.:

          $ gcal -cU
          -|
          -| Text 1
          -| Text 2
          ...

`J'
`--suppress-text-part'
     Unterdrückt die Ausgabe aller Textteile in der Terminliste, z.B.:

          $ gcal -cJ
          -|
          -| So,   6 Nov 1994:
          -| So,   6 Nov 1994:
          ...

`x'
`--exclude-fixed-dates-list-title'
     Die Ausgabe der Überschrift in der Terminliste unterdrücken.

`z'
`--include-consecutive-number'
     Die laufende Postennummer des Termins ausgeben.

`Z'
`--zero-dates-only'
     Nur die Daten ausgeben, zu denen keine Termine vorliegen, d.h. nur
     die aus dem Datum bestehenden "leeren" Termine.

*Terminzeitraum-Modifizierer und Optionen:*

`--leap-day=february|march'
     Den "Schalttag"(14) (*note Termin Optionen-Footnote-14::) auch in
     Nichtschaltjahren berücksichtigen.

    `--leap-day=february'
          Ein Termin, der in jedem Jahr gelten soll und der sich auf
          den Schalttag bezieht, wird in Nichtschaltjahren am 28'ten
          Februar ausgegeben.

    `--leap-day=march'
          Ein Termin, der in jedem Jahr gelten soll und der sich auf
          den Schalttag bezieht, wird in Nichtschaltjahren am 1'ten
          März ausgegeben.

`d'
`--include-today'
     Wenn eine Datumliste erzeugt wird, so wird das aktuelle Datum in
     dieser Liste mit eingeschlossen.  *Note Termin Option
     `--list-mode': x-list-mode, wie eine Datumliste erzeugt wird.

`l'
`--list-mode'
     Erzeugen einer Datumliste anstelle eines Einzeldatum.

     *Bitte beachten:*
     In den folgenden Beispielen wird angenommen, daß das aktuelle
     Systemdatum der *17'te Februar eines beliebigen Jahres* (00000217)
     ist, Wochen Montags anfangen, und ISO-Wochennummern verwendet
     werden!

`--period-of-fixed-dates=ARGUMENT'

`Nd'
`*dN'
     Alle Daten zum absoluten Tag N == `1...365|366|999' im aktuellen
     Jahr ausgeben; das Niveau ist wie bei der einfachen `-c' Option.
     Wenn für N der Wert 999 angegeben ist, so wird der letzte Tag im
     Jahr (31'ter Dezember) angenommen.

        * Z.B. `gcal -c10d' bzw.  `gcal --period-of-fixed-dates=10d'
          oder `gcal -c*d10' bzw. `gcal --period-of-fixed-dates=*d10'
          gibt die Termine aus, die am 10'ten Tag des Jahres
          stattfinden.

`lNd'
`l*dN'
     Liste von Daten, in Abhängigkeit des Wertes von N gestern oder
     morgen beginnend, und endend am N'ten absoluten Tag des aktuellen
     Jahres; das Niveau ist wie bei der `-cy' Option.

        * Z.B. `gcal -cl10d' bzw. `gcal -cl*d10' gibt eine Liste aller
          derjenigen Termine aus, die am 10'ten Tag des Jahres beginnen
          und am 16'ten Februar enden.

`N+|-'
     Alle Daten zum Tag _heute `+/-' N Tage_ im aktuellen Jahr
     ausgeben; das Niveau ist wie bei der einfachen `-c' Option.

        * Z.B. `gcal -c10+' gibt die Termine aus, die 10 Tage nach dem
          17'ten Februar (heute) stattfinden.

        * Z.B. `gcal -c10-' gibt die Termine aus, die 10 Tage vor dem
          17'ten Februar (heute) stattfinden.

`lN+|-'
     Liste von Daten, gestern `-' oder morgen `+' beginnend, und endend
     am Tag _heute `+/-' N Tage_ im aktuellen Jahr ausgeben; das Niveau
     ist wie bei der `-cy' Option.

        * Z.B. `gcal -cl10+' gibt eine Liste aller derjenigen Termine
          aus, die am 18'ten Februar beginnen und 10 Tage danach enden.

        * Z.B. `gcal -cl10-' gibt eine Liste aller derjenigen Termine
          aus, die 10 Tage vor dem 16'ten Februar beginnen und am
          16'ten Februar enden.

`Nw'
     Alle Daten zur Woche Nummer N == `0|1...52|53|99' des aktuellen
     Jahres ausgeben; das Niveau ist wie bei der `-cw' Option.  *Note
     Kalender Option `--starting-day=ARGUMENT': x-starting-day, *Note
     Kalender Option `--iso-week-number=yes|no': x-iso-week-number, und
     *Note Gesichtspunkte zur Internationalisierung:
     Internationalisierung, für weitere Details.

        * Z.B. `gcal -c0w' gibt alle diejenigen Termine aus, die falls
          das Vorjahr eine 53'te Kalenderwoche hat, in der 53'ten
          Kalenderwoche des Vorjahres liegen oder falls das Vorjahr
          keine 53'te Kalenderwoche hat, in der 1'ten Kalenderwoche des
          aktuellen Jahres liegen.

        * Z.B. `gcal -c6w' gibt alle diejenigen Termine aus, die in der
          6'ten Kalenderwoche liegen.

        * Z.B. `gcal -c52w' gibt alle diejenigen Termine aus, die in
          der 52'ten Kalenderwoche liegen.

        * Z.B. `gcal -c53w' gibt alle diejenigen Termine aus, die in
          der 53'ten Kalenderwoche liegen, falls das Jahr eine 53'te
          Kalenderwoche hat.  Wenn das Jahr keine 53'te Kalenderwoche
          hat, so werden keine Termine ausgegeben und das Programm wird
          mit Fehlerkode abgebrochen.  *Note Fehlerkode 126:
          x-126-Fehlerkode.

        * Z.B. `gcal -c99w' gibt alle diejenigen Termine aus, die in
          der letzten Kalenderwoche liegen, d.h. entweder die 52'te
          oder die 53'te Kalenderwoche.

`lNw'
     Liste von Daten, in Abhängigkeit der gegebenen Wochennummer
     N == `0|1...52|53|99' gestern oder morgen beginnend und endend am
     ersten bzw. letzten Tag der gegebenen Woche N des aktuellen Jahres
     ausgeben; das Niveau ist wie bei der `-cy' Option.  *Note Kalender
     Option `--starting-day=ARGUMENT': x-starting-day, *Note Kalender
     Option `--iso-week-number=yes|no': x-iso-week-number, und *Note
     Gesichtspunkte zur Internationalisierung: Internationalisierung,
     für weitere Details.

        * Z.B. `gcal -cl12w' gibt eine Liste aller derjenigen Termine
          aus, die am 18'ten Februar beginnen und bis zum Ende der
          12'ten Kalenderwoche reichen.

        * Z.B. `gcal -cl3w' gibt eine Liste aller derjenigen Termine
          aus, die am Anfang der 3'ten Kalenderwoche beginnen und
          16'ten Februar enden.

`MMTT'
     Alle Daten zum Tag TT im Monat MM des aktuellen Jahres ausgeben;
     das Niveau ist wie bei der einfachen `-c' Option.

        * Z.B. `gcal -c0225' gibt die Termine aus, die am 25'ten
          Februar stattfinden.

`lMMTT'
     Liste von Daten, in Abhängigkeit des Wertes MMTT gestern bzw.
     morgen beginnend, und endend am Tag TT im Monat MM des aktuellen
     Jahres, ausgeben; das Niveau ist wie bei der `-cy' Option.

        * Z.B. `gcal -cl0225' gibt eine Liste aller derjenigen Termine
          aus, die am 18'ten Februar beginnen und am 25'ten Februar
          enden.

        * Z.B. `gcal -cl0109' gibt eine Liste aller derjenigen Termine
          aus, die am 9'ten Januar beginnen und am 16'ten Februar enden.

`MMWWWN'
     Alle Daten zum N'ten == `1...5|9' Wochentag WWW im Monat MM des
     aktuellen Jahres ausgeben; das Niveau ist wie bei der einfachen
     `-c' Option.

        * Z.B. `gcal -c01mon3' gibt die Termine aus, die am dritten
          Montag im Januar stattfinden.

        * Z.B. `gcal -c02fr9' gibt die Termine aus, die am letzten
          Freitag im Februar stattfinden.

`lMMWWWN'
     Liste von Daten, in Abhängigkeit des Wertes in MMWWWN gestern bzw.
     morgen beginnend, und endend am N'ten == `1...5|9' Wochentag WWW
     im Monat MM des aktuellen Jahres ausgeben; das Niveau ist wie bei
     der `-cy' Option.

        * Z.B. `gcal -cl01mon3' gibt eine Liste aller derjenigen
          Termine aus, die am dritten Montag im Januar beginnen und am
          16'ten Februar enden.

        * Z.B. `gcal -cl02fr9' gibt eine Liste aller derjenigen Termine
          aus, die am 18'ten Februar beginnen und am letzten Freitag im
          Februar enden.

`*dNWWW'
     Alle Daten zum N'ten == `1...51|52|53|99' Wochentag WWW des
     aktuellen Jahres ausgeben; das Niveau ist wie bei der einfachen
     `-c' Option.

        * Z.B. `gcal -c*d16son' gibt alle diejenigen Termine aus, die
          auf den 16'ten Sonntag des Jahres fallen.

        * Z.B. `gcal -c*d52son' gibt alle diejenigen Termine aus, die
          auf den 52'ten Sonntag des Jahres fallen.  Wenn das Jahr
          keinen 52'ten Sonntag hat, so werden keine Termine ausgegeben
          und das Programm wird mit Fehlerkode abgebrochen.  *Note
          Fehlerkode 126: x-126-Fehlerkode.

        * Z.B. `gcal -c*d53son' gibt alle diejenigen Termine aus, die
          auf den 53'ten Sonntag des Jahres fallen.  Wenn das Jahr
          keinen 53'ten Sonntag hat, so werden keine Termine ausgegeben
          und das Programm wird mit Fehlerkode abgebrochen.  *Note
          Fehlerkode 126: x-126-Fehlerkode.

        * Z.B. `gcal -c*d99son' gibt alle diejenigen Termine aus, die
          auf den letzten Sonntag(15) (*note Termin
          Optionen-Footnote-15::) des Jahres fallen.

`l*dNWWW'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten == `1...51|52|53|99' Wochentag WWW
     des aktuellen Jahres ausgeben; das Niveau ist wie bei der `-cy'
     Option.

        * Z.B. `gcal -cl*d16son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am 16'ten
          Sonntag des Jahres enden.

        * Z.B. `gcal -cl*d52son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am 52'ten
          Sonntag des Jahres enden.  Wenn das Jahr keinen 52'ten
          Sonntag hat, so werden keine Termine ausgegeben und das
          Programm wird mit Fehlerkode abgebrochen.  *Note Fehlerkode
          126: x-126-Fehlerkode.

        * Z.B. `gcal -cl*d53son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am 53'ten
          Sonntag des Jahres enden.  Wenn das Jahr keinen 53'ten
          Sonntag hat, so werden keine Termine ausgegeben und das
          Programm wird mit Fehlerkode abgebrochen.  *Note Fehlerkode
          126: x-126-Fehlerkode.

        * Z.B. `gcal -cl*d99son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am letzten
          Sonntag(16) (*note Termin Optionen-Footnote-16::) des Jahres
          enden.

`*wN[WWW]'
     Alle Daten zum Wochentag WWW der N'ten == `0|1...52|53|99'
     Kalenderwoche des aktuellen Jahres ausgeben; das Niveau ist wie
     bei der einfachen `-c' Option.  Wenn kein Wochentag WWW angegeben
     ist, so wird Starttag der Woche als Wochentag WWW angenommen.
     *Note Kalender Option `--starting-day=ARGUMENT': x-starting-day,
     *Note Kalender Option `--iso-week-number=yes|no':
     x-iso-week-number, und *Note Gesichtspunkte zur
     Internationalisierung: Internationalisierung, für weitere Details.

        * Z.B. `gcal -c*w0son' gibt alle diejenigen Termine aus, die
          falls das Jahr einen Sonntag hat, der in der 52'ten bzw.
          53'ten Kalenderwoche des Vorjahres liegt, auf diesen Sonntag
          fallen.  Wenn ein solcher Sonntag nicht existiert, so werden
          keine Termine ausgegeben und das Programm wird mit Fehlerkode
          abgebrochen.  *Note Fehlerkode 126: x-126-Fehlerkode.

        * Z.B. `gcal -c*w16son' gibt alle diejenigen Termine aus, die
          auf den Sonntag der 16'ten Kalenderwoche des Jahres fallen.

        * Z.B. `gcal -c*w52son' gibt alle diejenigen Termine aus, die
          auf den Sonntag der 52'ten Kalenderwoche des Jahres fallen.
          Wenn das Jahr keinen Sonntag der 52'ten Kalenderwoche hat, so
          werden keine Termine ausgegeben und das Programm wird mit
          Fehlerkode abgebrochen.  *Note Fehlerkode 126:
          x-126-Fehlerkode.

        * Z.B. `gcal -c*w53son' gibt alle diejenigen Termine aus, die
          auf den Sonntag der 53'ten Kalenderwoche des Jahres fallen.
          Wenn das Jahr keinen Sonntag der 53'ten Kalenderwoche hat, so
          werden keine Termine ausgegeben und das Programm wird mit
          Fehlerkode abgebrochen.  *Note Fehlerkode 126:
          x-126-Fehlerkode.

        * Z.B. `gcal -c*w99son' gibt alle diejenigen Termine aus, die
          auf den letzten Sonntag(17) (*note Termin
          Optionen-Footnote-17::) des Jahres fallen.

`l*wN[WWW]'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am Wochentag WWW der
     N'ten == `0|1...51|52|53|99' Kalenderwoche des aktuellen Jahres
     ausgeben; das Niveau ist wie bei der `-cy' Option.  Wenn kein
     Wochentag WWW angegeben ist, so wird der Starttag der Woche als
     Wochentag WWW angenommen.  *Note Kalender Option
     `--starting-day=ARGUMENT': x-starting-day, *Note Kalender Option
     `--iso-week-number=yes|no': x-iso-week-number, und *Note
     Gesichtspunkte zur Internationalisierung: Internationalisierung,
     für weitere Details.

        * Z.B. `gcal -cl*w0son' gibt eine Liste aller derjenigen
          Termine aus, die falls das Jahr einen Sonntag hat, der in der
          52'ten bzw. 53'ten Kalenderwoche des Vorjahres liegt, an
          diesem Sonntag beginnen und am 16'ten Februar enden.  Wenn
          ein solcher Sonntag nicht existiert, so werden keine Termine
          ausgegeben und das Programm wird mit Fehlerkode abgebrochen.
          *Note Fehlerkode 126: x-126-Fehlerkode.

        * Z.B. `gcal -cl*w16son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am Sonntag
          der 16'ten Kalenderwoche des Jahres enden.

        * Z.B. `gcal -cl*w52son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am Sonntag
          der 52'ten Kalenderwoche des Jahres enden.  Wenn das Jahr
          keinen Sonntag der 52'ten Kalenderwoche hat, so werden keine
          Termine ausgegeben und das Programm wird mit Fehlerkode
          abgebrochen.  *Note Fehlerkode 126: x-126-Fehlerkode.

        * Z.B. `gcal -cl*w53son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am Sonntag
          der 53'ten Kalenderwoche des Jahres enden.  Wenn das Jahr
          keinen Sonntag der 53'ten Kalenderwoche hat, so werden keine
          Termine ausgegeben und das Programm wird mit Fehlerkode
          abgebrochen.  *Note Fehlerkode 126: x-126-Fehlerkode.

        * Z.B. `gcal -cl*w99son' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am letzten
          Sonntag(18) (*note Termin Optionen-Footnote-18::) des Jahres
          enden.

`@e[[+|-]N]'
     Alle Daten zum N'ten Tag relativ zum Datum Ostersonntag des
     aktuellen Jahres ausgeben; das Niveau ist wie bei der einfachen
     `-c' Option.

        * Z.B. `gcal -c@e' gibt die Termine aus, die am Ostersonntag
          stattfinden.

        * Z.B. `gcal -c@e10' bzw. `gcal -c@e+10' gibt die Termine aus,
          die 10 Tage nach Ostersonntag stattfinden.

        * Z.B. `gcal -c@e-10' gibt die Termine aus, die 10 Tage vor
          Ostersonntag stattfinden.

`l@e[[+|-]N]'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten Tag relativ zum Datum Ostersonntag
     des aktuellen Jahres ausgeben; das Niveau ist wie bei der `-cy'
     Option.

        * Z.B. `gcal -cl@e' gibt eine Liste aller derjenigen Termine
          aus, die am 18'ten Februar beginnen und am Ostersonntag enden.

        * Z.B. `gcal -cl@e10' bzw. `gcal -cl@e+10' gibt eine Liste
          aller derjenigen Termine aus, die am 18'ten Februar beginnen
          und 10 Tage nach Ostersonntag enden.

        * Z.B. `gcal -cl@e-10' gibt eine Liste aller derjenigen Termine
          aus, die am 18'ten Februar beginnen und 10 Tage vor
          Ostersonntag enden.

`@e[+|-]NWWW'
     Alle Daten zum N'ten Wochentag WWW relativ zum Datum Ostersonntag
     des aktuellen Jahres ausgeben; das Niveau ist wie bei der
     einfachen `-c' Option.

        * Z.B. `gcal -c@e3fr' bzw. `gcal -c@e+3fr' gibt die Termine
          aus, die am 3'ten Freitag nach Ostersonntag stattfinden.

        * Z.B. `gcal -c@e-3fr' gibt die Termine aus, die am 3'ten
          Freitag vor Ostersonntag stattfinden.

`l@e[+|-]NWWW'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten Wochentag WWW relativ zum Datum
     Ostersonntag des aktuellen Jahres ausgeben; das Niveau ist wie bei
     der `-cy' Option.

        * Z.B. `gcal -cl@e3fr' bzw. `gcal -cl@e+3fr' gibt eine Liste
          aller derjenigen Termine aus, die am 18'ten Februar beginnen
          und am 3'ten Freitag nach Ostersonntag enden.

        * Z.B. `gcal -cl@e-3fr' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am 3'ten
          Freitag vor Ostersonntag enden.

`@t[[+|-]N]'
     Alle Daten zum N'ten Tag relativ zum heutigen Datum des aktuellen
     Jahres ausgeben; das Niveau ist wie bei der einfachen `-c' Option.

        * Z.B. `gcal -c@t' gibt die Termine aus, die am heutigen Datum
          stattfinden (== `gcal -c').

        * Z.B. `gcal -c@t10' bzw. `gcal -c@t+10' gibt die Termine aus,
          die 10 Tage nach dem heutigen Datum stattfinden (== `gcal
          -c10+').

        * Z.B. `gcal -c@t-10' gibt die Termine aus, die 10 Tage vor dem
          heutigen Datum stattfinden (== `gcal -c10-').

`l@t[[+|-]N]'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten Tag relativ zum heutigen Datum des
     aktuellen Jahres ausgeben; das Niveau ist wie bei der `-cy' Option.

        * Z.B. `gcal -cl@t' bewirkt nichts.

        * Z.B. `gcal -cl@t10' bzw. `gcal -cl@t+10' gibt eine Liste
          aller derjenigen Termine aus, die am 18'ten Februar beginnen
          und 10 Tage nach dem heutigen Datum enden (== `gcal -cl10+').

        * Z.B. `gcal -cl@t-10' gibt eine Liste aller derjenigen Termine
          aus, die am 16'ten Februar beginnen und 10 Tage vor dem
          heutigen Datum enden (== `gcal -cl10-').

`@t[+|-]NWWW'
     Alle Daten zum N'ten Wochentag WWW relativ zum heutigen Datum des
     aktuellen Jahres ausgeben; das Niveau ist wie bei der einfachen
     `-c' Option.

        * Z.B. `gcal -c@t3fr' bzw. `gcal -c@t+3fr' gibt die Termine
          aus, die am 3'ten Freitag nach dem heutigen Datum stattfinden.

        * Z.B. `gcal -c@t-3fr' gibt die Termine aus, die am 3'ten
          Freitag vor dem heutigen Datum stattfinden.

`l@t[+|-]NWWW'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten Wochentag WWW relativ zum heutigen
     Datum des aktuellen Jahres ausgeben; das Niveau ist wie bei der
     `-cy' Option.

        * Z.B. `gcal -cl@t3fr' bzw. `gcal -cl@t+3fr' gibt eine Liste
          aller derjenigen Termine aus, die am 18'ten Februar beginnen
          und am 3'ten Freitag nach dem heutigen Datum enden.

        * Z.B. `gcal -cl@t-3fr' gibt eine Liste aller derjenigen
          Termine aus, die am 16'ten Februar beginnen und am 3'ten
          Freitag vor dem heutigen Datum enden.

`@DVAR[[+|-]N]'
     Alle Daten zum N'ten Tag relativ zum Datum der Datumvariablen des
     aktuellen Jahres ausgeben; das Niveau ist wie bei der einfachen
     `-c' Option.

        * Z.B. `gcal -v a=0422 -c@a' gibt die Termine aus, die am
          22'ten April stattfinden.

        * Z.B. `gcal -v a=0422 -c@a10' bzw.  `gcal -v a=0422 -c@a+10'
          gibt die Termine aus, die 10 Tage nach dem 22'ten April
          stattfinden.

        * Z.B. `gcal -v a=0422 -c@a-10' gibt die Termine aus, die 10
          Tage vor dem 22'ten April stattfinden.

`l@DVAR[[+|-]N]'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten Tag relativ zum Datum der
     Datumvariablen des aktuellen Jahres ausgeben; das Niveau ist wie
     bei der `-cy' Option.

        * Z.B. `gcal -v a=0422 -cl@a' gibt eine Liste aller derjenigen
          Termine aus, die am 18'ten Februar beginnen und am 22'ten
          April enden.

        * Z.B. `gcal -v a=0422 -cl@a10' bzw.  `gcal -v a=0422 -cl@a+10'
          gibt eine Liste aller derjenigen Termine aus, die am 18'ten
          Februar beginnen und 10 Tage nach dem 22'ten April enden.

        * Z.B. `gcal -v a=0422 -cl@a-10' gibt eine Liste aller
          derjenigen Termine aus, die am 18'ten Februar beginnen und 10
          Tage vor dem 22'ten April enden.

`@DVAR[+|-]NWWW'
     Alle Daten zum N'ten Wochentag WWW relativ zum Datum der
     Datumvariablen des aktuellen Jahres ausgeben; das Niveau ist wie
     bei der einfachen `-c' Option.

        * Z.B. `gcal -v a=0122 -c@a2sa' bzw.  `gcal -v a=0122 -c@a+2sa'
          gibt die Termine aus, die zwei Samstage nach dem 22'ten
          Januar stattfinden.

        * Z.B. `gcal -v a=0122 -c@a-2sa' gibt die Termine aus, die zwei
          Samstage vor dem 22'ten Januar stattfinden.

`l@DVAR[+|-]NWWW'
     Liste von Daten, in Abhängigkeit des Wertes N gestern oder morgen
     beginnend, und endend am N'ten Wochentag WWW relativ zum Datum der
     Datumvariablen des aktuellen Jahres ausgeben; das Niveau ist wie
     bei der `-cy' Option.

        * Z.B. `gcal -v a=0122 -cl@a2sa' bzw.  `gcal -v a=0122
          -cl@a+2sa' gibt eine Liste aller derjenigen Termine aus, die
          zwei Samstage nach dem 22'ten Januar beginnen und am 16'ten
          Februar enden.

        * Z.B. `gcal -v a=0122 -cl@a-2sa' gibt eine Liste aller
          derjenigen Termine aus, die zwei Samstage vor dem 22'ten
          Januar beginnen und am 16'ten Februar enden.

`t|T'
`--tomorrow' Langoption
     Liste von Daten ausgeben, die sich auf den morgigen Tag beziehen.

        * Z.B. `gcal -ct' gibt alle diejenigen Termine aus, die am
          18'ten Februar (morgen) stattfinden.

        * Z.B. `gcal -cdt' gibt alle diejenigen Termine aus, die am
          17'ten Februar (heute) und am 18'ten Februar (morgen)
          stattfinden.

`w|W[+|-]'
`--week' Langoption
`--end-of-week' Langoption
`--start-of-week' Langoption
     Liste von Daten ausgeben, die sich auf die Woche beziehen.
     *Note Kalender Option `--starting-day=ARGUMENT': x-starting-day.

        * `w' oder `--week' Langoption
          Liste von Daten vom _Starttag_ der aktuellen Woche bis zum
          letzten Tag der aktuellen Woche ausgeben.

             - Z.B. `gcal -cw' gibt alle diejenigen Termine aus, die in
               der gesamten Woche, in die der 17'te Februar fällt,
               stattfinden.

        * `w+' oder `--end-of-week' Langoption
          Liste von Daten vom Tag nach dem aktuellen Tag der aktuellen
          Woche bis zum letzten Tag der aktuellen Woche ausgeben.

             - Z.B. `gcal -cw+' gibt alle diejenigen Termine aus, die am
               18'ten Februar (morgen) beginnen und am letzten Tag der
               Woche enden.

             - Z.B. `gcal -cdw+' gibt alle diejenigen Termine aus, die
               am 17'ten Februar (heute) beginnen und am letzten Tag
               der Woche enden.

        * `w-' oder `start-of-week' Langoption
          Liste von Daten vom _Starttag_ der aktuellen Woche bis zum Tag
          vor dem aktuellen Tag der aktuellen Woche ausgeben.

             - Z.B. `gcal -cw-' gibt alle diejenigen Termine aus, die am
               ersten Tag der Woche beginnen und am 16'ten (gestern)
               Februar enden.

             - Z.B. `gcal -cdw-' gibt alle diejenigen Termine aus, die
               am ersten Tag der Woche beginnen und am 17'ten Februar
               (heute) enden.

`m|M[+|-]'
`--month' Langoption
`--end-of-month' Langoption
`--start-of-month' Langoption
     Liste von Daten ausgeben, die sich auf den Monat beziehen.

        * `m' oder `--month' Langoption
          Liste von Daten vom ersten Tag des aktuellen Monats bis zum
          letzten Tag des aktuellen Monats ausgeben.

             - Z.B. `gcal -cm' gibt alle diejenigen Termine aus, die im
               gesamten Monat Februar stattfinden.

        * `m+' oder `--end-of-month' Langoption
          Liste von Daten vom Tag nach dem aktuellen Tag des aktuellen
          Monats bis zum letzten Tag des aktuellen Monats ausgeben.

             - Z.B. `gcal -cm+' gibt alle diejenigen Termine aus, die am
               18'ten Februar (morgen) beginnen und am letzten Tag des
               Monats Februar enden.

             - Z.B. `gcal -cdm+' gibt alle diejenigen Termine aus, die
               am 17'ten Februar (heute) beginnen und am letzten Tag
               des Monats Februar enden.

        * `m-' oder `--start-of-month' Langoption
          Liste von Daten vom ersten Tag des aktuellen Monats bis zum
          Tag vor dem aktuellen Tag des aktuellen Monats ausgeben.

             - Z.B. `gcal -cm-' gibt alle diejenigen Termine aus, die am
               ersten Tag des Monats Februar beginnen und am 16'ten
               Februar (gestern) enden.

             - Z.B. `gcal -cdm-' gibt alle diejenigen Termine aus, die
               am ersten Tag des Monats Februar beginnen und am 17'ten
               Februar (heute) enden.

`y|Y[+|-]'
`--year' Langoption
`--end-of-year' Langoption
`--start-of-year' Langoption
     Liste von Daten ausgeben, die sich auf das Jahr beziehen.

        * `y' oder `--year' Langoption
          Liste von Daten vom ersten Tag des aktuellen Jahres bis zum
          letzten Tag des aktuellen Jahres ausgeben.

             - Z.B. `gcal -cy' gibt alle diejenigen Termine aus, die im
               gesamten Jahr stattfinden.

        * `y+' oder `--end-of-year' Langoption
          Liste von Daten vom Tag nach dem aktuellen Tag des aktuellen
          Jahres bis zum letzten Tag des aktuellen Jahres ausgeben.

             - Z.B. `gcal -cy+' gibt alle diejenigen Termine aus, die am
               18'ten Februar (morgen) beginnen und am letzten Tag des
               Jahres enden.

             - Z.B. `gcal -cdy+' gibt alle diejenigen Termine aus, die
               am 17'ten Februar (heute) beginnen und am letzten Tag
               des Jahres enden.

        * `y-' oder `--start-of-year' Langoption
          Liste von Daten vom ersten Tag des aktuellen Jahres bis zum
          Tag vor dem aktuellen Tag des aktuellen Jahres ausgeben.

             - Z.B. `gcal -cy-' gibt alle diejenigen Termine aus, die am
               ersten Tag des Jahres beginnen und am 16'ten Februar
               (gestern) enden.

             - Z.B. `gcal -cdy-' gibt alle diejenigen Termine aus, die
               am ersten Tag des Jahres beginnen und am 17'ten Februar
               (heute) enden.

